# this us a re-usable workflow that define the logic to build a container image from a docker file and add the tags we use in Flycs process.

on:
  workflow_call:
    inputs:
      repo:
        required: true
        type: string
        description: name of the container repository
      name:
        required: true
        type: string
        description: name of the container image to build
      dockerfile:
        required: false
        type: string
        description: Path to the Dockerfile to use to build the image
        default: Dockerfile
      working-directory:
        required: false
        type: string
        description: The directory used as build context
        default: "."
    secrets:
      GAR_JSON_KEY:
        required: true

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: docker/login-action@v2
        name: "Login to Google Artifact registry"
        with:
          registry: europe-west1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY }}

      - name: Build the container image
        working-directory: ${{ inputs.working-directory }}
        run: |
          set -ex
          COMMIT_USERNAME=$(git show -s --format='%ae' $SHORT_SHA | sed 's/@.*/-user/' | sed 's/.*+//')
          docker build -f ${{ inputs.dockerfile }} -t ${{ inputs.repo}}/${{ inputs.name }}:${{github.sha}} .                        # Tag with commit hash
          docker tag ${{ inputs.repo}}/${{ inputs.name }}:${{github.sha}} ${{ inputs.repo}}/${{ inputs.name }}:latest               # Tag with latest
          docker tag ${{ inputs.repo}}/${{ inputs.name }}:${{github.sha}} ${{ inputs.repo}}/${{ inputs.name }}:$GITHUB_ACTOR        # Tag with username that made the commit that triggered this build
          docker tag ${{ inputs.repo}}/${{ inputs.name }}:${{github.sha}} ${{ inputs.repo}}/${{ inputs.name }}:${{github.ref_name}} # Tag with branch or tag name
          docker push --all-tags ${{ inputs.repo}}/${{ inputs.name }}
